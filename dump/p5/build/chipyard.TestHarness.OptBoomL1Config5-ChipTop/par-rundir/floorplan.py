import sys
import math

def generate(sram_list_path: str, output_tcl: str):
    """
    Generates a floorplan TCL script by placing SRAMs within a defined
    die area, automatically wrapping to the next row when the edge is reached.
    """
    TARGET_DIE_WIDTH = 3200
    TARGET_DIE_HEIGHT = 2000

    SRAM_AVG_WIDTH = 20  # 估算的SRAM平均宽度
    SRAM_AVG_HEIGHT = 140 # 估算的SRAM平均高度

    # 3. 宏单元之间的间距
    X_SPACING = 10  # 水平间距
    Y_SPACING = 20  # 垂直间距
    # --- 配置结束 ---

    try:
        with open(sram_list_path) as f:
            srams = [line.strip().replace('ChipTop/', '') for line in f if line.strip()]
    except FileNotFoundError:
        print(f"错误: SRAM列表文件未找到 -> {sram_list_path}")
        sys.exit(1)

    # 初始化布局变量
    lines = [
        "# Floorplan TCL script generated by smart floorplan.py",
        f"# Target Die Size: {TARGET_DIE_WIDTH} x {TARGET_DIE_HEIGHT}",
        f"create_floorplan -core_margins_by die -flip f -die_size_by_io_height max -site core -die_size {{ {TARGET_DIE_WIDTH} {TARGET_DIE_HEIGHT} 0 0 0 0 }}"
    ]
    
    current_x = 0
    current_y = 0
    row_max_height = 0
    
    total_width_req = 0
    total_height_req = 0

    # 开始布局
    for inst in srams:
        # 检查当前行是否能容纳这个SRAM
        if current_x + SRAM_AVG_WIDTH > TARGET_DIE_WIDTH:
            # 放不下了, 移动到下一行
            current_y += row_max_height + Y_SPACING
            current_x = 0
            row_max_height = 0

        # --- 生成TCL命令 ---
        lines.append(f"place_inst {inst} {current_x} {current_y} r0")
        lines.append(f"create_place_halo -insts {inst} -halo_deltas {{0.0 0.0 0.0 0.0}} -snap_to_site")
        lines.append(f"create_route_halo -bottom_layer M1 -space 0.0 -top_layer M4 -inst {inst}")

        # --- 更新光标和尺寸记录 ---
        # 更新当前行的最大高度
        row_max_height = max(row_max_height, SRAM_AVG_HEIGHT)
        
        # 将光标移动到下一个可放置的位置
        next_x = current_x + SRAM_AVG_WIDTH + X_SPACING
        
        # 记录所需的总布局尺寸
        total_width_req = max(total_width_req, current_x + SRAM_AVG_WIDTH)
        total_height_req = max(total_height_req, current_y + SRAM_AVG_HEIGHT)

        current_x = next_x


    # --- 写入TCL文件 ---
    try:
        with open(output_tcl, 'w') as fout:
            for line in lines:
                fout.write(line + "\n")
        print(f"\n成功生成 floorplan TCL 文件: {output_tcl}")
    except IOError:
        print(f"错误: 无法写入文件 -> {output_tcl}")
        sys.exit(1)

    # --- 打印布局报告 ---
    print("\n--- 布局生成报告 ---")
    print(f"SRAM 总数: {len(srams)}")
    print(f"目标芯片尺寸: {TARGET_DIE_WIDTH}w x {TARGET_DIE_HEIGHT}h")
    print(f"估算所需尺寸: {math.ceil(total_width_req)}w x {math.ceil(total_height_req)}h")
    
    if total_width_req > TARGET_DIE_WIDTH or total_height_req > TARGET_DIE_HEIGHT:
        print("\n*** 警告: 估算布局超出目标芯片区域! ***")
        print("请检查生成的TCL文件，在Innovus中运行时它可能仍然会报错。")
        print("解决方案:")
        print("  1. 在此Python脚本中，减小 'SRAM_AVG_WIDTH' / 'SRAM_AVG_HEIGHT' 的值。")
        print("  2. 或者减小 'X_SPACING' / 'Y_SPACING' 的值。")
        print("  3. 如果上述方法都不可行，说明您的目标芯片尺寸对于SRAM数量来说太小了。")
    else:
        print("\n估算布局成功适配目标芯片尺寸。")


if __name__ == '__main__':
    if len(sys.argv) != 3:
        print("\n用法: python floorplan.py <sram_list.txt> <output.tcl>")
        print("示例: python floorplan.py sram_list.txt my_floorplan.tcl")
        sys.exit(1)
    
    sram_list_file = sys.argv[1]
    output_tcl_file = sys.argv[2]
    generate(sram_list_file, output_tcl_file)